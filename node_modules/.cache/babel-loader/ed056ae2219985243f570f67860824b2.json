{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\vsvai\\\\Desktop\\\\projects\\\\web\\\\website\\\\reactapp\\\\my-app\\\\src\\\\Fetch.js\",\n    _s = $RefreshSig$();\n\nconst Fetch = require('node-fetch');\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  }\n});\nexport default function OutlinedCard() {\n  _s();\n\n  const classes = useStyles();\n\n  const bull = /*#__PURE__*/_jsxDEV(\"span\", {\n    className: classes.bullet,\n    children: \" \\u2022 \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 18\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.root,\n    variant: \"outlined\",\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.title,\n        color: \"textSecondary\",\n        gutterBottom: true,\n        children: \"Word of the Day \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h2\",\n        children: [\"be \", bull, \"nev \", bull, \"o \", bull, \"lent \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 22\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.pos,\n        color: \"textSecondary\",\n        children: \"adjective \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 22\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        component: \"p\",\n        children: [\"well meaning and kindly. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 34\n        }, this), \" \", '\"a benevolent smile\"', \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 22\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        children: \" Learn More \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 23\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 14\n  }, this);\n}\n\n_s(OutlinedCard, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = OutlinedCard;\n\nfunction fetch() {\n  let url = \"https://jsonplaceholder.typicode.com/posts\";\n  let settings = {\n    method: \"Get\"\n  };\n  Fetch(url, settings).then(res => res.json()).then(json => {\n    const post_data = json; //console.log(JSON.stringify(data));\n\n    console.log(\"_-----------------------_\");\n\n    for (var i in post_data) {\n      const entry = JSON.stringify(i);\n      console.log(\"------\");\n      console.log(post_data[i].id);\n      console.log(\"------\");\n      console.log(post_data[i].title);\n      console.log(\"------\");\n      console.log(post_data[i].body);\n      console.log(\"_______________________\");\n    } // do something with JSON\n\n  });\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"OutlinedCard\");","map":{"version":3,"sources":["C:/Users/vsvai/Desktop/projects/web/website/reactapp/my-app/src/Fetch.js"],"names":["Fetch","require","useStyles","makeStyles","root","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","OutlinedCard","classes","bull","fetch","url","settings","method","then","res","json","post_data","console","log","i","entry","JSON","stringify","id","body"],"mappings":"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","sourcesContent":["const Fetch = require('node-fetch');\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 275,\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n});\r\n\r\nexport default function OutlinedCard() {\r\n    const classes = useStyles();\r\n    const bull = < span className = { classes.bullet } > â€¢ < /span>;\r\n\r\n    return ( <\r\n        Card className = { classes.root }\r\n        variant = \"outlined\" >\r\n        <\r\n        CardContent >\r\n        <\r\n        Typography className = { classes.title }\r\n        color = \"textSecondary\"\r\n        gutterBottom >\r\n        Word of the Day <\r\n        /Typography> <\r\n        Typography variant = \"h5\"\r\n        component = \"h2\" >\r\n        be { bull }\r\n        nev { bull }\r\n        o { bull }\r\n        lent <\r\n        /Typography> <\r\n        Typography className = { classes.pos }\r\n        color = \"textSecondary\" >\r\n        adjective <\r\n        /Typography> <\r\n        Typography variant = \"body2\"\r\n        component = \"p\" >\r\n        well meaning and kindly. <\r\n        br / > { '\"a benevolent smile\"' } <\r\n        /Typography> <\r\n        /CardContent> <\r\n        CardActions >\r\n        <\r\n        Button size = \"small\" > Learn More < /Button> <\r\n        /CardActions> <\r\n        /Card>\r\n    );\r\n}\r\n\r\nfunction fetch() {\r\n    let url = \"https://jsonplaceholder.typicode.com/posts\";\r\n\r\n    let settings = { method: \"Get\" };\r\n\r\n    Fetch(url, settings)\r\n        .then(res => res.json())\r\n        .then((json) => {\r\n            const post_data = json;\r\n            //console.log(JSON.stringify(data));\r\n            console.log(\"_-----------------------_\");\r\n            for (var i in post_data) {\r\n                const entry = JSON.stringify(i);\r\n                console.log(\"------\");\r\n                console.log(post_data[i].id);\r\n                console.log(\"------\");\r\n                console.log(post_data[i].title);\r\n                console.log(\"------\");\r\n                console.log(post_data[i].body);\r\n                console.log(\"_______________________\");\r\n            }\r\n            // do something with JSON\r\n        });\r\n}"]},"metadata":{},"sourceType":"module"}